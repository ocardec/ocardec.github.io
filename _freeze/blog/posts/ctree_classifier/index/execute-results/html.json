{
  "hash": "329831297f601d0739a8de94123ded57",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Conditional Inference Trees\"\ndescription: \"Supervised learning classifications using the R package **partykit** conditional inference trees\"\nauthor: \"Oscar Cardec\"\ndate: \"10/22/2020\"\ncategories: [CTREE, Decision Tree, Classification]\nimage: ctg.jpeg\npage-layout: full\nbibliography: references.bib\n---\n\n\n\n\n### Introduction\n\nCardiotocograms, also known as CTGs, have been instrumental within clinical medicine for a long time. Obstetricians use these measurements and classifications to obtain detailed information and intelligence about newborns and their mother prior and during labor. In 2018, an article presented through the Journal of Clinical Medicine detailed the practicality of CTG. The same article noted that interpretations of these censorial readings is mainly attributed to the observer; which creates challenges of consistency of interpretations and defies the human naked- eye. Questions like what happens if/when the interpreter misses a key detail, or what could be the meaning of a combination of diagnostic signals, furthermore, what time-sensitive conditions may these measurements expose, requiring immediate actions? These are few examples of concerns posed by the continuous practice of merely optical assessments of a df. [@zhao2018]\n\nThe following exploration presents an assessment of CTGs using the conditional inference tree (ctree) model. The same shows how the algorithm expedites and enhances the interpretation of CTG readings while appraising multiple fetal readings simultaneously. Moreover, the study aims to identify potential hidden patters which may require further attention.\n\n### Data\n\nThe analyzed data comes for the UCI Machine Learning Repository[@d.campos2000a], and it consists of measurements of fetal heart rate (FHR) and other important characteristics as identified and recorded within each cardiotocograms. Ultimately, all CTGs were classified by three subject matter experts, and under unanimity, assigned with response-labels based on the fetal state and/or morphological detected patterns. The following is a list of the variables meaning according to the UCI repository:\n\n-   LB - FHR baseline (beats per minute)\n-   AC - \\# of accelerations per second\n-   FM - \\# of fetal movements per second\n-   UC - \\# of uterine contractions per second\n-   DL - \\# of light decelerations per second\n-   DS - \\# of severe decelerations per second\n-   DP - \\# of prolonged decelerations per second\n-   ASTV - percentage of time with abnormal short term variability\n-   MSTV - mean value of short term variability\n-   ALTV - percentage of time with abnormal long term variability\n-   MLTV - mean value of long term variability Width - width of FHR histogram\n-   Min - minimum of FHR histogram\n-   Max - Maximum of FHR histogram\n-   Nmax - \\# of histogram peaks\n-   Nzeros - \\# of histogram zeros\n-   Mode - histogram mode\n-   Mean - histogram mean\n-   Median - histogram median\n-   Variance - histogram variance\n-   Tendency - histogram tendency\n-   CLASS - FHR pattern class code (1 to 10)\n-   NSP - fetal state class code (N=normal; S=suspect; P=pathologic)\n\n### EDA\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nDuring exploratory data analysis the data is confirmed as a combination of 2126 observations and 23 variables. The following is a preview of the first six observations after been ingested as *as_tibble*.\n\n\n\n\n::: {.cell expandable='true'}\n\n```{.r .cell-code}\ndf<-as_tibble(read.csv(file=\"cardiotocography.csv\", head=TRUE, sep=\",\", as.is=FALSE))\nprint(df, n=6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,126 × 23\n     LB    AC    FM    UC    DL    DS    DP  ASTV  MSTV  ALTV  MLTV Width   Min\n  <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <int> <dbl> <int> <dbl> <int> <int>\n1   120 0         0 0     0         0 0        73   0.5    43   2.4    64    62\n2   132 0.006     0 0.006 0.003     0 0        17   2.1     0  10.4   130    68\n3   133 0.003     0 0.008 0.003     0 0        16   2.1     0  13.4   130    68\n4   134 0.003     0 0.008 0.003     0 0        16   2.4     0  23     117    53\n5   132 0.007     0 0.008 0         0 0        16   2.4     0  19.9   117    53\n6   134 0.001     0 0.01  0.009     0 0.002    26   5.9     0   0     150    50\n# ℹ 2,120 more rows\n# ℹ 10 more variables: Max <int>, Nmax <int>, Nzeros <int>, Mode <int>,\n#   Mean <int>, Median <int>, Variance <int>, Tendency <int>, CLASS <int>,\n#   NSP <int>\n```\n\n\n:::\n:::\n\n\n\n\nThe following code chunks portray a basic assessment of specific attributes and areas of importance such as variability of observations, presence of missing values, mean, standard deviation,\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# How much variability the main predictor shows? \nlbx <- IQR(df$LB)\nsummary(df$LB)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  106.0   126.0   133.0   133.3   140.0   160.0 \n```\n\n\n:::\n:::\n\n\n\n\nNote: LB attribute's IQR equals 14, which is significantly small indicating a most values to be clustered around the middle. The following histogram confirms the small IQR.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(df$LB, breaks = 12, main=\"Histogram of FHR Baseline\", xlab=\"(beats per minute)\",\n     border=\"darkblue\",col =\"lightgrey\", labels = F)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Hist-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Are there any missing values present?\ncolSums(is.na(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      LB       AC       FM       UC       DL       DS       DP     ASTV \n       0        0        0        0        0        0        0        0 \n    MSTV     ALTV     MLTV    Width      Min      Max     Nmax   Nzeros \n       0        0        0        0        0        0        0        0 \n    Mode     Mean   Median Variance Tendency    CLASS      NSP \n       0        0        0        0        0        0        0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(df$LB)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tOne Sample t-test\n\ndata:  df$LB\nt = 624.59, df = 2125, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 132.8853 133.7224\nsample estimates:\nmean of x \n 133.3039 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# LB stats\nm<-mean(df$LB)\nstd<-sd(df$LB)\nupr=m+std\nlwr=m-std\nlbdf <- data.frame(df,my_x = 0 + rnorm(length(df$LB),\n        mean=m, sd=std),my_y = 0 + rnorm(length(df$LB), mean=m, sd=std))\n# LB Variation\nprint(pltlb <- ggplot(lbdf, xlab = F, aes(x=(my_x), y=my_y)) + \n        geom_line(col=\"grey51\",linemitre=1) +\n        geom_smooth(method=lm , color=\"blue\", lty=3, fill=\"light blue\", se=T) +\n        labs(x=NULL, y=\"BPM\", title=\"FHR LB Variation\\nIn Relation To The Mean\")+\n        theme_ipsum())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Variation-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# very first graph representation with manual boundary calculations\nupr2=m+(std*2)\nlwr2=m-(std*2)\n# Plot LB distribution boundaries \nplot.new()\nplot(df$LB, type=\"l\", col=\"grey51\", ylab=\"LB\", main=\"1 & 2 Standard Deviations\")\nabline(h = m, col = \"blue\")\nabline(h = upr, col = \"orange\", lty=2)\nabline(h = lwr, col = \"orange\", lty=2)\nabline(h = upr2, col = \"red\", lty=2)\nabline(h = lwr2, col = \"red\", lty=2)\ntext(-65,134, \"mean:133.30\", col = \"blue\", adj = c(0, -.1))\ntext(-65,upr, round(upr, 2), col = \"black\", adj = c(0, -.1))\ntext(-65,lwr, round(lwr, 2), col = \"black\", adj = c(0, -.1))\ntext(-65,upr2, round(upr2, 2), col = \"black\", adj = c(0, -.1))\ntext(-65,lwr2, round(lwr2, 2), col = \"black\", adj = c(0, -.1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/stdev-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# LB Observations higher than 2-s.d.\n lba<-(sum(df$LB >152.99)) #39\n# LB Observations lower than 2-s.d.\n lbb<-(sum(df$LB <113.62)) #44\n lba+lbb #=83 obs outside of 2-s.d.\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 83\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(between(df$LB, 113.62, 152.99))/nrow(df) # of obs within 2-s.d.\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9609595\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exclude non-original measurements, rename targeted values\ndf[12:22] <- NULL\ndf$NSP<-as.numeric(df$NSP)\n# enumeration of labels with the factor function\ndf$NSP<-factor(df$NSP, levels= 1:3, labels = c(\"Normal\",\"Suspect\", \"Pathologic\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualization of original NSP\nplot(df$NSP, main=\"Original NSP Distribution\",\n     xlab=\"Fetal State Classification\", \n     ylab=\"Frequency\", col=c(3, 7, 2))\ntext(df$NSP, labels=as.character(tabulate(df$NSP)), adj=3, pos=3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/nsp-distro-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# additional way to preview distribution of attributes\n# distributions preview\ndf[,1:12] %>%\n  gather() %>%\n  ggplot(aes(value)) +\n  theme_light() + labs( title=\"FHR Measurement Distributions\")+\n  theme(axis.text.x = element_text(angle=90)) +\n  facet_wrap(~ key, scales = \"free\", shrink = TRUE) +\n  geom_bar(mapping = aes(value),\n           color=\"darkblue\", fill=\"lightgrey\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/distributions-1.png){width=1152}\n:::\n:::\n\n\n\n\nIn progress ...\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary of DF after encoding the label vector as numbers. \nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       LB              AC                 FM                 UC          \n Min.   :106.0   Min.   :0.000000   Min.   :0.000000   Min.   :0.000000  \n 1st Qu.:126.0   1st Qu.:0.000000   1st Qu.:0.000000   1st Qu.:0.002000  \n Median :133.0   Median :0.002000   Median :0.000000   Median :0.004000  \n Mean   :133.3   Mean   :0.003178   Mean   :0.009481   Mean   :0.004366  \n 3rd Qu.:140.0   3rd Qu.:0.006000   3rd Qu.:0.003000   3rd Qu.:0.007000  \n Max.   :160.0   Max.   :0.019000   Max.   :0.481000   Max.   :0.015000  \n       DL                 DS                  DP                 ASTV      \n Min.   :0.000000   Min.   :0.000e+00   Min.   :0.0000000   Min.   :12.00  \n 1st Qu.:0.000000   1st Qu.:0.000e+00   1st Qu.:0.0000000   1st Qu.:32.00  \n Median :0.000000   Median :0.000e+00   Median :0.0000000   Median :49.00  \n Mean   :0.001889   Mean   :3.293e-06   Mean   :0.0001585   Mean   :46.99  \n 3rd Qu.:0.003000   3rd Qu.:0.000e+00   3rd Qu.:0.0000000   3rd Qu.:61.00  \n Max.   :0.015000   Max.   :1.000e-03   Max.   :0.0050000   Max.   :87.00  \n      MSTV            ALTV             MLTV                NSP      \n Min.   :0.200   Min.   : 0.000   Min.   : 0.000   Normal    :1655  \n 1st Qu.:0.700   1st Qu.: 0.000   1st Qu.: 4.600   Suspect   : 295  \n Median :1.200   Median : 0.000   Median : 7.400   Pathologic: 176  \n Mean   :1.333   Mean   : 9.847   Mean   : 8.188                    \n 3rd Qu.:1.700   3rd Qu.:11.000   3rd Qu.:10.800                    \n Max.   :7.000   Max.   :91.000   Max.   :50.700                    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# split the data into a training and test sets\nset.seed(1234)\nind <- sample(2, nrow(df), replace = T, prob = c(0.70, 0.30))\ntrain.data <- df[ind == 1, ]\ntest.data <- df[ind == 2, ]\n\n#run the method on a training data\nmyFormula<-NSP~.\nmodel <- ctree(myFormula, data = train.data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# output the tree structure\n# print(model)\nmodel[4]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel formula:\nNSP ~ LB + AC + FM + UC + DL + DS + DP + ASTV + MSTV + ALTV + \n    MLTV\n\nFitted party:\n[4] root\n|   [5] ASTV <= 73\n|   |   [6] DL <= 0.008\n|   |   |   [7] DP <= 0\n|   |   |   |   [8] LB <= 149\n|   |   |   |   |   [9] AC <= 0.001\n|   |   |   |   |   |   [10] UC <= 0: Normal (n = 34, err = 14.7%)\n|   |   |   |   |   |   [11] UC > 0: Normal (n = 231, err = 3.5%)\n|   |   |   |   |   [12] AC > 0.001: Normal (n = 626, err = 0.3%)\n|   |   |   |   [13] LB > 149: Normal (n = 17, err = 35.3%)\n|   |   |   [14] DP > 0\n|   |   |   |   [15] MLTV <= 0.9: Normal (n = 7, err = 28.6%)\n|   |   |   |   [16] MLTV > 0.9\n|   |   |   |   |   [17] MLTV <= 8.8: Normal (n = 28, err = 0.0%)\n|   |   |   |   |   [18] MLTV > 8.8: Normal (n = 7, err = 28.6%)\n|   |   [19] DL > 0.008\n|   |   |   [20] ASTV <= 58: Normal (n = 35, err = 0.0%)\n|   |   |   [21] ASTV > 58: Pathologic (n = 25, err = 40.0%)\n|   [22] ASTV > 73: Pathologic (n = 11, err = 45.5%)\n\nNumber of inner nodes:     9\nNumber of terminal nodes: 10\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#8. visualize the tree\n# plot(model, main=\"Cardiotocography Data\\n Conditional Inference Tree\\n'Extended'\",\n#       type=\"simple\",ep_args = list(justmin = 8), drop_terminal = F, \n#      gp = gpar(fontsize = 9), margins = c(4,4, 4, 4))\n\nplot(model, type=\"extended\", ep_args = list(justmin =8), drop_terminal=F, tnex=1.5, \n     gp=gpar(fontsize = 8, col=\"dark blue\"),\n     inner_panel = node_inner(model, fill=c(\"light grey\",\"cyan\"), pval=T), \n     terminal_panel=node_barplot(model, fill=c(3,7,2), beside=T, ymax=1, rot = 45, \n     just = c(.95,.5), ylines=F, widths = 1, gap=0.05, reverse=F, id=T), \n     margins = c(3,0, 3, 0),\n     main =\"Cardiotocography Data\\n Conditional Inference Tree\\n'Extended'\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/model-treeviz-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#9. Confusion matrix\ntable(predict(model), train.data$NSP, dnn=c(\"PREDICTED\", \"ACTUAL\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            ACTUAL\nPREDICTED    Normal Suspect Pathologic\n  Normal       1168      70          4\n  Suspect        10     123          1\n  Pathologic     17       8        122\n```\n\n\n:::\n\n```{.r .cell-code}\n# predicted classification accuracy with training data\nsum(predict(model) == train.data$NSP)/length(train.data$NSP)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9277741\n```\n\n\n:::\n\n```{.r .cell-code}\nprop.table(table(predict(model), train.data$NSP, dnn=c(\"PREDICTED\", \"ACTUAL\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            ACTUAL\nPREDICTED          Normal      Suspect   Pathologic\n  Normal     0.7669074196 0.0459619173 0.0026263953\n  Suspect    0.0065659882 0.0807616546 0.0006565988\n  Pathologic 0.0111621799 0.0052527905 0.0801050558\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#10. Evaluate the model on a test data\nmodel2 <- ctree(myFormula, data = test.data)\nmodel2[4]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel formula:\nNSP ~ LB + AC + FM + UC + DL + DS + DP + ASTV + MSTV + ALTV + \n    MLTV\n\nFitted party:\n[4] root\n|   [5] DP <= 0\n|   |   [6] DL <= 0.01\n|   |   |   [7] ALTV <= 1: Normal (n = 291, err = 1.0%)\n|   |   |   [8] ALTV > 1\n|   |   |   |   [9] LB <= 143\n|   |   |   |   |   [10] ASTV <= 59: Normal (n = 78, err = 0.0%)\n|   |   |   |   |   [11] ASTV > 59: Normal (n = 14, err = 42.9%)\n|   |   |   |   [12] LB > 143\n|   |   |   |   |   [13] ASTV <= 45: Normal (n = 7, err = 14.3%)\n|   |   |   |   |   [14] ASTV > 45: Suspect (n = 13, err = 15.4%)\n|   |   [15] DL > 0.01: Normal (n = 10, err = 30.0%)\n|   [16] DP > 0\n|   |   [17] MSTV <= 1.7: Normal (n = 12, err = 25.0%)\n|   |   [18] MSTV > 1.7: Normal (n = 12, err = 50.0%)\n\nNumber of inner nodes:    7\nNumber of terminal nodes: 8\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot(model2, main=\"Cardiotocography Data\\n Simple Conditional Inference Tree\\nby ocardec\",\n#      type=\"simple\",ep_args = list(justmin = 10), drop_terminal = F, gp = gpar(fontsize = 12))\n\nplot(model2, ep_args = list(justmin = 8), type=\"extended\", drop_terminal = F, \n     tnex=1, gp= gpar(fontsize = 8, col=\"dark blue\"), \n     inner_panel = node_inner (model2, fill=c(\"lightgrey\",\"yellow\"), pval=T, id=T),\n     terminal_panel=node_barplot(model2, col=\"black\", fill=c(3,7,2, 0.3), beside=T, \n     ymax=1, rot = 45, just = c(\"right\", \"top\"), ylines=F, \n     widths=1, gap=0.1, reverse=F, id=F), margins = c(3, 0, 3, 0), \n     main=\"Cardiotocography Data\\n Extended Conditional Inference Tree\\nby ocardec\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/model2treeviz-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Confusion matrix and stats\ntestPred2 <- predict(model2, newdata = test.data, method=\"NSP\")\nconfusionMatrix(testPred2, test.data$NSP)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   Normal Suspect Pathologic\n  Normal        449      21         12\n  Suspect         9      73          4\n  Pathologic      2       0         33\n\nOverall Statistics\n                                          \n               Accuracy : 0.9204          \n                 95% CI : (0.8958, 0.9407)\n    No Information Rate : 0.7629          \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.7809          \n                                          \n Mcnemar's Test P-Value : 0.001165        \n\nStatistics by Class:\n\n                     Class: Normal Class: Suspect Class: Pathologic\nSensitivity                 0.9761         0.7766           0.67347\nSpecificity                 0.7692         0.9745           0.99639\nPos Pred Value              0.9315         0.8488           0.94286\nNeg Pred Value              0.9091         0.9594           0.97183\nPrevalence                  0.7629         0.1559           0.08126\nDetection Rate              0.7446         0.1211           0.05473\nDetection Prevalence        0.7993         0.1426           0.05804\nBalanced Accuracy           0.8727         0.8755           0.83493\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}